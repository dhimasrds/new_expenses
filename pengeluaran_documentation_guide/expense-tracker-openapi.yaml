openapi: 3.0.0
info:
  title: Expense Tracker API
  description: Backend API untuk aplikasi expense tracker menggunakan Supabase
  version: 1.0.0
  contact:
    name: API Support
    email: support@expensetracker.com

servers:
  - url: http://localhost:3001
    description: Local Development
  - url: https://newexpenses.vercel.app
    description: Production (Vercel)

security:
  - bearerAuth: []

paths:
  /api/auth/signup:
    post:
      tags:
        - Authentication
      summary: User signup
      description: Register user baru dengan email dan password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - fullName
              properties:
                email:
                  type: string
                  format: email
                  example: "newuser@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
                  minLength: 6
                fullName:
                  type: string
                  example: "John Doe"
                  minLength: 1
      responses:
        '200':
          description: Signup berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: "1984e0b7-d8bc-4b81-a668-e4af4a50e0b3"
                          email:
                            type: string
                            example: "newuser@example.com"
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user dengan email dan password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: "1984e0b7-d8bc-4b81-a668-e4af4a50e0b3"
                          email:
                            type: string
                            example: "user@example.com"
                      accessToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Logout user dan invalidate token
      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Logout successful"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/expenses:
    get:
      tags:
        - Expenses
      summary: Get all expenses
      description: Mengambil semua expenses untuk user yang sedang login dengan pagination
      parameters:
        - name: page
          in: query
          description: Page number untuk pagination
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: Jumlah maksimal expenses per page
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: category
          in: query
          description: Filter berdasarkan category
          required: false
          schema:
            type: string
            example: "Work"
        - name: startDate
          in: query
          description: Filter expenses dari tanggal tertentu (ISO 8601)
          required: false
          schema:
            type: string
            format: date-time
            example: "2025-10-01T00:00:00.000Z"
        - name: endDate
          in: query
          description: Filter expenses sampai tanggal tertentu (ISO 8601)
          required: false
          schema:
            type: string
            format: date-time
            example: "2025-10-31T23:59:59.999Z"
      responses:
        '200':
          description: Berhasil mengambil data expenses
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Expense'
                  meta:
                    type: object
                    properties:
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                            example: 1
                          limit:
                            type: integer
                            example: 10
                          total:
                            type: integer
                            example: 50
                          totalPages:
                            type: integer
                            example: 5
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Expenses
      summary: Create new expense
      description: Membuat expense baru untuk user yang sedang login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - description
                - amount
                - category
                - date
              properties:
                description:
                  type: string
                  example: "Coffee with client"
                  minLength: 1
                  maxLength: 255
                amount:
                  type: number
                  format: float
                  example: 5.75
                  minimum: 0.01
                category:
                  type: string
                  example: "Meals"
                  enum: ["Food", "Transport", "Work", "Entertainment", "Health", "Shopping", "Bills", "Other"]
                date:
                  type: string
                  format: date-time
                  example: "2025-10-28T10:00:00.000Z"
      responses:
        '201':
          description: Expense berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense'
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/expenses/{id}:
    get:
      tags:
        - Expenses
      summary: Get expense by ID
      description: Mengambil detail expense berdasarkan ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID dari expense
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Berhasil mengambil data expense
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense'
        '404':
          description: Expense tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - bukan pemilik expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Expenses
      summary: Update expense
      description: Update expense berdasarkan ID (hanya pemilik yang bisa update)
      parameters:
        - name: id
          in: path
          required: true
          description: ID dari expense yang akan diupdate
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "Updated coffee with client"
                  minLength: 1
                  maxLength: 255
                amount:
                  type: number
                  format: float
                  example: 6.50
                  minimum: 0.01
                category:
                  type: string
                  example: "Meals"
                  enum: ["Food", "Transport", "Work", "Entertainment", "Health", "Shopping", "Bills", "Other"]
                date:
                  type: string
                  format: date-time
                  example: "2025-10-28T10:00:00.000Z"
      responses:
        '200':
          description: Expense berhasil diupdate
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense'
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Expense tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - bukan pemilik expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Expenses
      summary: Delete expense
      description: Menghapus expense berdasarkan ID (hanya pemilik yang bisa menghapus)
      parameters:
        - name: id
          in: path
          required: true
          description: ID dari expense yang akan dihapus
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Expense berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Expense deleted successfully"
                      id:
                        type: string
                        example: "123e4567-e89b-12d3-a456-426614174000"
        '404':
          description: Expense tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - bukan pemilik expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "1984e0b7-d8bc-4b81-a668-e4af4a50e0b3"
        email:
          type: string
          format: email
          example: "user@example.com"
        created_at:
          type: string
          format: date-time
          example: "2025-10-15T10:30:00.000Z"

    Expense:
      type: object
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        user_id:
          type: string
          example: "1984e0b7-d8bc-4b81-a668-e4af4a50e0b3"
        description:
          type: string
          example: "Office Supplies"
        amount:
          type: number
          format: float
          example: 75.50
        category:
          type: string
          example: "Work"
          enum: ["Food", "Transport", "Work", "Entertainment", "Health", "Shopping", "Bills", "Other"]
        date:
          type: string
          format: date-time
          example: "2025-10-15T14:30:00.000Z"
        created_at:
          type: string
          format: date-time
          example: "2025-10-15T14:35:00.000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-10-15T14:35:00.000Z"

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
              enum: 
                - "VALIDATION_ERROR"
                - "UNAUTHORIZED"
                - "INVALID_CREDENTIALS"
                - "NOT_FOUND"
                - "FORBIDDEN"
                - "USER_ALREADY_EXISTS"
                - "INTERNAL_ERROR"
            message:
              type: string
              example: "Validation failed"
            details:
              type: object
              additionalProperties: true
              example:
                field: "amount"
                reason: "Must be greater than 0"

tags:
  - name: Authentication
    description: Endpoints untuk authentication dan session management
  - name: Expenses
    description: Endpoints untuk expense management (CRUD operations)
