openapi: 3.0.0
info:
  title: Expense Tracker API
  description: Backend API untuk aplikasi expense tracker menggunakan Supabase
  version: 1.0.0
  contact:
    name: API Support
    email: support@expensetracker.com

servers:
  - url: http://localhost:3000
    description: Local Development
  - url: https://your-project-name.vercel.app
    description: Production (Vercel)
  - url: https://api.yourdomain.com
    description: Custom Domain (Optional)

security:
  - bearerAuth: []

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user dengan email dan password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refresh_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Invalid credentials
        '401':
          description: Unauthorized

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Logout user dan invalidate token
      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Successfully logged out"
        '401':
          description: Unauthorized

  /api/v1/expenses:
    get:
      tags:
        - Expenses
      summary: Get all expenses
      description: Mengambil semua expenses untuk user yang sedang login
      parameters:
        - name: limit
          in: query
          description: Jumlah maksimal expenses yang dikembalikan
          required: false
          schema:
            type: integer
            default: 50
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Offset untuk pagination
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: category
          in: query
          description: Filter berdasarkan category
          required: false
          schema:
            type: string
            example: "Work"
        - name: date_from
          in: query
          description: Filter expenses dari tanggal tertentu (ISO 8601)
          required: false
          schema:
            type: string
            format: date-time
            example: "2025-10-01T00:00:00.000Z"
        - name: date_to
          in: query
          description: Filter expenses sampai tanggal tertentu (ISO 8601)
          required: false
          schema:
            type: string
            format: date-time
            example: "2025-10-31T23:59:59.999Z"
      responses:
        '200':
          description: Berhasil mengambil data expenses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

    post:
      tags:
        - Expenses
      summary: Create new expense
      description: Membuat expense baru untuk user yang sedang login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - description
                - amount
                - category
                - date
              properties:
                description:
                  type: string
                  example: "Coffee with client"
                  minLength: 1
                  maxLength: 255
                amount:
                  type: number
                  format: float
                  example: 5.75
                  minimum: 0.01
                category:
                  type: string
                  example: "Meals"
                  enum: ["Food", "Transport", "Work", "Entertainment", "Health", "Shopping", "Bills", "Other"]
                date:
                  type: string
                  format: date-time
                  example: "2025-10-28T10:00:00.000Z"
      responses:
        '201':
          description: Expense berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/v1/expenses/{id}:
    delete:
      tags:
        - Expenses
      summary: Delete expense
      description: Menghapus expense berdasarkan ID (hanya pemilik yang bisa menghapus)
      parameters:
        - name: id
          in: path
          required: true
          description: ID dari expense yang akan dihapus
          schema:
            type: string
            pattern: '^exp_[a-zA-Z0-9]+$'
            example: "exp_abc123"
      responses:
        '200':
          description: Expense berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Expense successfully deleted"
                  id:
                    type: string
                    example: "exp_abc123"
        '404':
          description: Expense tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - bukan pemilik expense
        '500':
          description: Internal server error

    get:
      tags:
        - Expenses
      summary: Get expense by ID
      description: Mengambil detail expense berdasarkan ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID dari expense
          schema:
            type: string
            pattern: '^exp_[a-zA-Z0-9]+$'
            example: "exp_abc123"
      responses:
        '200':
          description: Berhasil mengambil data expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '404':
          description: Expense tidak ditemukan
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - bukan pemilik expense

    put:
      tags:
        - Expenses
      summary: Update expense
      description: Update expense berdasarkan ID (hanya pemilik yang bisa update)
      parameters:
        - name: id
          in: path
          required: true
          description: ID dari expense yang akan diupdate
          schema:
            type: string
            pattern: '^exp_[a-zA-Z0-9]+$'
            example: "exp_abc123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "Updated coffee with client"
                  minLength: 1
                  maxLength: 255
                amount:
                  type: number
                  format: float
                  example: 6.50
                  minimum: 0.01
                category:
                  type: string
                  example: "Meals"
                  enum: ["Food", "Transport", "Work", "Entertainment", "Health", "Shopping", "Bills", "Other"]
                date:
                  type: string
                  format: date-time
                  example: "2025-10-28T10:00:00.000Z"
      responses:
        '200':
          description: Expense berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '400':
          description: Bad request - validation error
        '404':
          description: Expense tidak ditemukan
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - bukan pemilik expense

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "user_xyz789"
        email:
          type: string
          format: email
          example: "user@example.com"
        created_at:
          type: string
          format: date-time
          example: "2025-10-15T10:30:00.000Z"

    Expense:
      type: object
      properties:
        id:
          type: string
          example: "exp_abc123"
          pattern: '^exp_[a-zA-Z0-9]+$'
        userId:
          type: string
          example: "user_xyz789"
        description:
          type: string
          example: "Office Supplies"
        amount:
          type: number
          format: float
          example: 75.50
        category:
          type: string
          example: "Work"
          enum: ["Food", "Transport", "Work", "Entertainment", "Health", "Shopping", "Bills", "Other"]
        date:
          type: string
          format: date-time
          example: "2025-10-15T14:30:00.000Z"
        created_at:
          type: string
          format: date-time
          example: "2025-10-15T14:35:00.000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-10-15T14:35:00.000Z"

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Validation failed"
        message:
          type: string
          example: "Amount must be greater than 0"
        code:
          type: string
          example: "VALIDATION_ERROR"
        details:
          type: object
          additionalProperties: true

tags:
  - name: Authentication
    description: Endpoints untuk authentication dan session management
  - name: Expenses
    description: Endpoints untuk expense management (CRUD operations)
